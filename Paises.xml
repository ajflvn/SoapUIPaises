<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="9f2f6d35-f985-477a-8fa4-26266420d5b1" activeEnvironment="Default" name="Paises" soapui-version="5.7.2" abortOnError="false" runType="SEQUENTIAL" resourceRoot="" xmlns:con="http://eviware.com/soapui/config"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.actions.iface.tools.soapui.TestRunnerAction@values-local"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Report Format(s)" value=""/>
  <con:entry key="Host:Port" value=""/>
  <con:entry key="Export JUnit Results" value="true"/>
  <con:entry key="Export All" value="true"/>
  <con:entry key="Save After" value="false"/>
  <con:entry key="Add Settings" value="false"/>
  <con:entry key="WSS Password Type" value=""/>
  <con:entry key="TestSuite" value="SCN01_SMOKE_TEST"/>
  <con:entry key="Endpoint" value=""/>
  <con:entry key="Select Report Type" value=""/>
  <con:entry key="System Properties" value=""/>
  <con:entry key="Password" value=""/>
  <con:entry key="Print Report" value="false"/>
  <con:entry key="Open Report" value="false"/>
  <con:entry key="Export JUnit Results with test properties" value="true"/>
  <con:entry key="Global Properties" value=""/>
  <con:entry key="Project Properties" value=""/>
  <con:entry key="Project Password" value=""/>
  <con:entry key="TestCase" value="&lt;all>"/>
  <con:entry key="Username" value=""/>
  <con:entry key="user-settings.xml Password" value=""/>
  <con:entry key="TestRunner Path" value=""/>
  <con:entry key="Environment" value="Default"/>
  <con:entry key="Coverage Report" value="false"/>
  <con:entry key="Enable UI" value="false"/>
  <con:entry key="Root Folder" value="C:\Users\6003023\Documents\SoapUI_Projects\Reports"/>
  <con:entry key="Ignore Errors" value="false"/>
  <con:entry key="Domain" value=""/>
  <con:entry key="Tool Args" value=""/>
  <con:entry key="Save Project" value="false"/>
</xml-fragment>]]></con:setting></con:settings><con:interface xsi:type="con:WsdlInterface" id="f809ccd5-91b1-4b87-ab94-e1092f0cf796" wsaVersion="NONE" name="CountryInfoServiceSoapBinding12" type="wsdl" bindingName="{http://www.oorsprong.org/websamples.countryinfo}CountryInfoServiceSoapBinding12" soapVersion="1_2" anonymous="optional" definition="http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso?WSDL" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso</con:endpoint></con:endpoints><con:operation id="40278dca-8315-4732-982c-e428f78b9900" isOneWay="false" action="" name="CapitalCity" bindingOperationName="CapitalCity" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="49180e35-f05e-44f5-8107-60df9890ab92" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:web="http://www.oorsprong.org/websamples.countryinfo">\r
   <soap:Header/>\r
   <soap:Body>\r
      <web:CapitalCity>\r
         <web:sCountryISOCode>?</web:sCountryISOCode>\r
      </web:CapitalCity>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.oorsprong.org/websamples.countryinfo/CountryInfoServiceSoapType/CapitalCityRequest"/></con:call></con:operation><con:operation id="310bc7d3-699b-4ab4-be3d-dba52474f76d" isOneWay="false" action="" name="CountriesUsingCurrency" bindingOperationName="CountriesUsingCurrency" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="f7a534a5-076a-4bb7-bce0-a2e7153c6faa" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:web="http://www.oorsprong.org/websamples.countryinfo">\r
   <soap:Header/>\r
   <soap:Body>\r
      <web:CountriesUsingCurrency>\r
         <web:sISOCurrencyCode>?</web:sISOCurrencyCode>\r
      </web:CountriesUsingCurrency>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.oorsprong.org/websamples.countryinfo/CountryInfoServiceSoapType/CountriesUsingCurrencyRequest"/></con:call></con:operation><con:operation id="6c6c2597-d2b6-474f-b3b8-76556ae5d14f" isOneWay="false" action="" name="CountryCurrency" bindingOperationName="CountryCurrency" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="adb08f7c-07b9-4a67-a5b8-e13d26ec70e1" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:web="http://www.oorsprong.org/websamples.countryinfo">\r
   <soap:Header/>\r
   <soap:Body>\r
      <web:CountryCurrency>\r
         <web:sCountryISOCode>?</web:sCountryISOCode>\r
      </web:CountryCurrency>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.oorsprong.org/websamples.countryinfo/CountryInfoServiceSoapType/CountryCurrencyRequest"/></con:call></con:operation><con:operation id="84cd70f8-c5db-40d1-b5a3-5b0e8e208fdc" isOneWay="false" action="" name="CountryFlag" bindingOperationName="CountryFlag" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="897091d3-6efc-49f5-9e78-f4e6f8d0dcd6" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:web="http://www.oorsprong.org/websamples.countryinfo">\r
   <soap:Header/>\r
   <soap:Body>\r
      <web:CountryFlag>\r
         <web:sCountryISOCode>?</web:sCountryISOCode>\r
      </web:CountryFlag>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.oorsprong.org/websamples.countryinfo/CountryInfoServiceSoapType/CountryFlagRequest"/></con:call></con:operation><con:operation id="c743bfbc-e6d9-4455-8ec9-34dc2679f93b" isOneWay="false" action="" name="CountryIntPhoneCode" bindingOperationName="CountryIntPhoneCode" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="0759740d-1d7c-44a4-a759-a7fb403b8cc0" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:web="http://www.oorsprong.org/websamples.countryinfo">\r
   <soap:Header/>\r
   <soap:Body>\r
      <web:CountryIntPhoneCode>\r
         <web:sCountryISOCode>?</web:sCountryISOCode>\r
      </web:CountryIntPhoneCode>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.oorsprong.org/websamples.countryinfo/CountryInfoServiceSoapType/CountryIntPhoneCodeRequest"/></con:call></con:operation><con:operation id="47725162-4bf5-4d1f-b251-38c866ac673a" isOneWay="false" action="" name="CountryISOCode" bindingOperationName="CountryISOCode" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="0f8c6ab7-0c00-4b71-8bd8-f364e3dec0dc" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:web="http://www.oorsprong.org/websamples.countryinfo">\r
   <soap:Header/>\r
   <soap:Body>\r
      <web:CountryISOCode>\r
         <web:sCountryName>?</web:sCountryName>\r
      </web:CountryISOCode>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.oorsprong.org/websamples.countryinfo/CountryInfoServiceSoapType/CountryISOCodeRequest"/></con:call></con:operation><con:operation id="1fea2134-5f3d-43ee-8ffb-f3f88840c6b6" isOneWay="false" action="" name="CountryName" bindingOperationName="CountryName" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="12897e7b-a417-4c60-b437-517d0d344784" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:web="http://www.oorsprong.org/websamples.countryinfo">\r
   <soap:Header/>\r
   <soap:Body>\r
      <web:CountryName>\r
         <web:sCountryISOCode>?</web:sCountryISOCode>\r
      </web:CountryName>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.oorsprong.org/websamples.countryinfo/CountryInfoServiceSoapType/CountryNameRequest"/></con:call></con:operation><con:operation id="69aab43a-ea3b-4256-9af0-4f62ce513b36" isOneWay="false" action="" name="CurrencyName" bindingOperationName="CurrencyName" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="71c73fd6-f93f-46ac-983d-e5ceda9a32d1" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:web="http://www.oorsprong.org/websamples.countryinfo">\r
   <soap:Header/>\r
   <soap:Body>\r
      <web:CurrencyName>\r
         <web:sCurrencyISOCode>?</web:sCurrencyISOCode>\r
      </web:CurrencyName>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.oorsprong.org/websamples.countryinfo/CountryInfoServiceSoapType/CurrencyNameRequest"/></con:call></con:operation><con:operation id="ec298c53-4ff5-459a-9192-c6717b0bae74" isOneWay="false" action="" name="FullCountryInfo" bindingOperationName="FullCountryInfo" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="fe786231-6e8a-4925-bb6c-34db1d9833af" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:web="http://www.oorsprong.org/websamples.countryinfo">\r
   <soap:Header/>\r
   <soap:Body>\r
      <web:FullCountryInfo>\r
         <web:sCountryISOCode>?</web:sCountryISOCode>\r
      </web:FullCountryInfo>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.oorsprong.org/websamples.countryinfo/CountryInfoServiceSoapType/FullCountryInfoRequest"/></con:call></con:operation><con:operation id="74e8483d-b3d9-487a-a5e1-6a91324b3512" isOneWay="false" action="" name="FullCountryInfoAllCountries" bindingOperationName="FullCountryInfoAllCountries" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="3e6468d3-c040-4d84-9418-20fa9370d340" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:web="http://www.oorsprong.org/websamples.countryinfo">\r
   <soap:Header/>\r
   <soap:Body>\r
      <web:FullCountryInfoAllCountries/>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.oorsprong.org/websamples.countryinfo/CountryInfoServiceSoapType/FullCountryInfoAllCountriesRequest"/></con:call></con:operation><con:operation id="1889bf65-fd1a-48d8-9157-60780c1af207" isOneWay="false" action="" name="LanguageISOCode" bindingOperationName="LanguageISOCode" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="e155bb80-3e55-47f0-9415-4718f8a300d7" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:web="http://www.oorsprong.org/websamples.countryinfo">\r
   <soap:Header/>\r
   <soap:Body>\r
      <web:LanguageISOCode>\r
         <web:sLanguageName>?</web:sLanguageName>\r
      </web:LanguageISOCode>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.oorsprong.org/websamples.countryinfo/CountryInfoServiceSoapType/LanguageISOCodeRequest"/></con:call></con:operation><con:operation id="e5fb5531-ccf0-49bc-9fec-24f65de37ef0" isOneWay="false" action="" name="LanguageName" bindingOperationName="LanguageName" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="16298c37-7c3c-4c4e-b9f6-6fd01eacbece" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:web="http://www.oorsprong.org/websamples.countryinfo">\r
   <soap:Header/>\r
   <soap:Body>\r
      <web:LanguageName>\r
         <web:sISOCode>?</web:sISOCode>\r
      </web:LanguageName>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.oorsprong.org/websamples.countryinfo/CountryInfoServiceSoapType/LanguageNameRequest"/></con:call></con:operation><con:operation id="78ceded2-9d93-447a-b60b-e9cee6be4c0d" isOneWay="false" action="" name="ListOfContinentsByCode" bindingOperationName="ListOfContinentsByCode" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="6d2db54e-aa13-40c2-bb0a-86639c0ff45e" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:web="http://www.oorsprong.org/websamples.countryinfo">\r
   <soap:Header/>\r
   <soap:Body>\r
      <web:ListOfContinentsByCode/>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.oorsprong.org/websamples.countryinfo/CountryInfoServiceSoapType/ListOfContinentsByCodeRequest"/></con:call></con:operation><con:operation id="e879bda4-58a0-4724-a58d-432418a68422" isOneWay="false" action="" name="ListOfContinentsByName" bindingOperationName="ListOfContinentsByName" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="fd88d380-50cb-40bc-bfdf-8ec5a39cc3bc" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:web="http://www.oorsprong.org/websamples.countryinfo">\r
   <soap:Header/>\r
   <soap:Body>\r
      <web:ListOfContinentsByName/>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.oorsprong.org/websamples.countryinfo/CountryInfoServiceSoapType/ListOfContinentsByNameRequest"/></con:call></con:operation><con:operation id="9ed5c570-1b29-4eed-96be-6ffe020cf656" isOneWay="false" action="" name="ListOfCountryNamesByCode" bindingOperationName="ListOfCountryNamesByCode" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="000e22be-b797-4f05-8cba-f7506069e2b5" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:web="http://www.oorsprong.org/websamples.countryinfo">\r
   <soap:Header/>\r
   <soap:Body>\r
      <web:ListOfCountryNamesByCode/>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.oorsprong.org/websamples.countryinfo/CountryInfoServiceSoapType/ListOfCountryNamesByCodeRequest"/></con:call></con:operation><con:operation id="f2b1cf0a-65eb-4864-b426-827444b6a42c" isOneWay="false" action="" name="ListOfCountryNamesByName" bindingOperationName="ListOfCountryNamesByName" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="908a194e-121e-497c-8332-519668985426" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:web="http://www.oorsprong.org/websamples.countryinfo">\r
   <soap:Header/>\r
   <soap:Body>\r
      <web:ListOfCountryNamesByName/>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.oorsprong.org/websamples.countryinfo/CountryInfoServiceSoapType/ListOfCountryNamesByNameRequest"/></con:call></con:operation><con:operation id="4f612958-c89a-41df-8efb-68e2a6af8932" isOneWay="false" action="" name="ListOfCountryNamesGroupedByContinent" bindingOperationName="ListOfCountryNamesGroupedByContinent" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="c419bdda-b312-4e2d-a217-d7dd8501d4d0" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:web="http://www.oorsprong.org/websamples.countryinfo">\r
   <soap:Header/>\r
   <soap:Body>\r
      <web:ListOfCountryNamesGroupedByContinent/>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.oorsprong.org/websamples.countryinfo/CountryInfoServiceSoapType/ListOfCountryNamesGroupedByContinentRequest"/></con:call></con:operation><con:operation id="3c703e35-73e2-49ff-838a-0228cecdf294" isOneWay="false" action="" name="ListOfCurrenciesByCode" bindingOperationName="ListOfCurrenciesByCode" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="416ff24d-398c-401d-b04d-b775e4b124d8" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:web="http://www.oorsprong.org/websamples.countryinfo">\r
   <soap:Header/>\r
   <soap:Body>\r
      <web:ListOfCurrenciesByCode/>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.oorsprong.org/websamples.countryinfo/CountryInfoServiceSoapType/ListOfCurrenciesByCodeRequest"/></con:call></con:operation><con:operation id="b4452644-59d0-4bea-9fd5-9cff985b30ea" isOneWay="false" action="" name="ListOfCurrenciesByName" bindingOperationName="ListOfCurrenciesByName" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="681987f9-d81d-48a8-8d49-385d116012fb" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:web="http://www.oorsprong.org/websamples.countryinfo">\r
   <soap:Header/>\r
   <soap:Body>\r
      <web:ListOfCurrenciesByName/>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.oorsprong.org/websamples.countryinfo/CountryInfoServiceSoapType/ListOfCurrenciesByNameRequest"/></con:call></con:operation><con:operation id="2d341410-0349-42a9-9e14-477a3033f80e" isOneWay="false" action="" name="ListOfLanguagesByCode" bindingOperationName="ListOfLanguagesByCode" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="730d465f-c171-4a95-9743-87257f8a9dc9" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:web="http://www.oorsprong.org/websamples.countryinfo">\r
   <soap:Header/>\r
   <soap:Body>\r
      <web:ListOfLanguagesByCode/>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.oorsprong.org/websamples.countryinfo/CountryInfoServiceSoapType/ListOfLanguagesByCodeRequest"/></con:call></con:operation><con:operation id="22309dfb-75f9-47a6-957d-982f2261abbb" isOneWay="false" action="" name="ListOfLanguagesByName" bindingOperationName="ListOfLanguagesByName" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="584460dc-8db0-4a49-b191-3c8b64e29b8a" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:web="http://www.oorsprong.org/websamples.countryinfo">\r
   <soap:Header/>\r
   <soap:Body>\r
      <web:ListOfLanguagesByName/>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.oorsprong.org/websamples.countryinfo/CountryInfoServiceSoapType/ListOfLanguagesByNameRequest"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="7050c8b4-3dab-4c8a-bc86-5e9412502dc5" wsaVersion="NONE" name="CountryInfoServiceSoapBinding" type="wsdl" bindingName="{http://www.oorsprong.org/websamples.countryinfo}CountryInfoServiceSoapBinding" soapVersion="1_1" anonymous="optional" definition="http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso?WSDL" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso?WSDL"><con:part><con:url>http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso?WSDL</con:url><con:content><![CDATA[<definitions name="CountryInfoService" targetNamespace="http://www.oorsprong.org/websamples.countryinfo" xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:tns="http://www.oorsprong.org/websamples.countryinfo">
  <types>
    <xs:schema elementFormDefault="qualified" targetNamespace="http://www.oorsprong.org/websamples.countryinfo">
      <xs:complexType name="tContinent">
        <xs:sequence>
          <xs:element name="sCode" type="xs:string"/>
          <xs:element name="sName" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="tCurrency">
        <xs:sequence>
          <xs:element name="sISOCode" type="xs:string"/>
          <xs:element name="sName" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="tCountryCodeAndName">
        <xs:sequence>
          <xs:element name="sISOCode" type="xs:string"/>
          <xs:element name="sName" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="tCountryCodeAndNameGroupedByContinent">
        <xs:sequence>
          <xs:element name="Continent" type="tns:tContinent"/>
          <xs:element name="CountryCodeAndNames" type="tns:ArrayOftCountryCodeAndName"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="tCountryInfo">
        <xs:sequence>
          <xs:element name="sISOCode" type="xs:string"/>
          <xs:element name="sName" type="xs:string"/>
          <xs:element name="sCapitalCity" type="xs:string"/>
          <xs:element name="sPhoneCode" type="xs:string"/>
          <xs:element name="sContinentCode" type="xs:string"/>
          <xs:element name="sCurrencyISOCode" type="xs:string"/>
          <xs:element name="sCountryFlag" type="xs:string"/>
          <xs:element name="Languages" type="tns:ArrayOftLanguage"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="tLanguage">
        <xs:sequence>
          <xs:element name="sISOCode" type="xs:string"/>
          <xs:element name="sName" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ArrayOftCountryCodeAndName">
        <xs:sequence>
          <xs:element name="tCountryCodeAndName" type="tns:tCountryCodeAndName" minOccurs="0" maxOccurs="unbounded" nillable="true"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ArrayOftLanguage">
        <xs:sequence>
          <xs:element name="tLanguage" type="tns:tLanguage" minOccurs="0" maxOccurs="unbounded" nillable="true"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ArrayOftContinent">
        <xs:sequence>
          <xs:element name="tContinent" type="tns:tContinent" minOccurs="0" maxOccurs="unbounded" nillable="true"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ArrayOftCurrency">
        <xs:sequence>
          <xs:element name="tCurrency" type="tns:tCurrency" minOccurs="0" maxOccurs="unbounded" nillable="true"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ArrayOftCountryCodeAndNameGroupedByContinent">
        <xs:sequence>
          <xs:element name="tCountryCodeAndNameGroupedByContinent" type="tns:tCountryCodeAndNameGroupedByContinent" minOccurs="0" maxOccurs="unbounded" nillable="true"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ArrayOftCountryInfo">
        <xs:sequence>
          <xs:element name="tCountryInfo" type="tns:tCountryInfo" minOccurs="0" maxOccurs="unbounded" nillable="true"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ListOfContinentsByName">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="ListOfContinentsByNameResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="ListOfContinentsByNameResult" type="tns:ArrayOftContinent"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ListOfContinentsByCode">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="ListOfContinentsByCodeResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="ListOfContinentsByCodeResult" type="tns:ArrayOftContinent"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ListOfCurrenciesByName">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="ListOfCurrenciesByNameResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="ListOfCurrenciesByNameResult" type="tns:ArrayOftCurrency"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ListOfCurrenciesByCode">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="ListOfCurrenciesByCodeResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="ListOfCurrenciesByCodeResult" type="tns:ArrayOftCurrency"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CurrencyName">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="sCurrencyISOCode" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CurrencyNameResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="CurrencyNameResult" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ListOfCountryNamesByCode">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="ListOfCountryNamesByCodeResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="ListOfCountryNamesByCodeResult" type="tns:ArrayOftCountryCodeAndName"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ListOfCountryNamesByName">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="ListOfCountryNamesByNameResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="ListOfCountryNamesByNameResult" type="tns:ArrayOftCountryCodeAndName"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ListOfCountryNamesGroupedByContinent">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="ListOfCountryNamesGroupedByContinentResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="ListOfCountryNamesGroupedByContinentResult" type="tns:ArrayOftCountryCodeAndNameGroupedByContinent"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CountryName">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="sCountryISOCode" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CountryNameResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="CountryNameResult" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CountryISOCode">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="sCountryName" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CountryISOCodeResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="CountryISOCodeResult" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CapitalCity">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="sCountryISOCode" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CapitalCityResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="CapitalCityResult" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CountryCurrency">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="sCountryISOCode" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CountryCurrencyResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="CountryCurrencyResult" type="tns:tCurrency"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CountryFlag">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="sCountryISOCode" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CountryFlagResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="CountryFlagResult" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CountryIntPhoneCode">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="sCountryISOCode" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CountryIntPhoneCodeResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="CountryIntPhoneCodeResult" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="FullCountryInfo">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="sCountryISOCode" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="FullCountryInfoResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="FullCountryInfoResult" type="tns:tCountryInfo"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="FullCountryInfoAllCountries">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="FullCountryInfoAllCountriesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="FullCountryInfoAllCountriesResult" type="tns:ArrayOftCountryInfo"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CountriesUsingCurrency">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="sISOCurrencyCode" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CountriesUsingCurrencyResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="CountriesUsingCurrencyResult" type="tns:ArrayOftCountryCodeAndName"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ListOfLanguagesByName">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="ListOfLanguagesByNameResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="ListOfLanguagesByNameResult" type="tns:ArrayOftLanguage"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ListOfLanguagesByCode">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="ListOfLanguagesByCodeResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="ListOfLanguagesByCodeResult" type="tns:ArrayOftLanguage"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="LanguageName">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="sISOCode" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="LanguageNameResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="LanguageNameResult" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="LanguageISOCode">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="sLanguageName" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="LanguageISOCodeResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="LanguageISOCodeResult" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
  </types>
  <message name="ListOfContinentsByNameSoapRequest">
    <part name="parameters" element="tns:ListOfContinentsByName"/>
  </message>
  <message name="ListOfContinentsByNameSoapResponse">
    <part name="parameters" element="tns:ListOfContinentsByNameResponse"/>
  </message>
  <message name="ListOfContinentsByCodeSoapRequest">
    <part name="parameters" element="tns:ListOfContinentsByCode"/>
  </message>
  <message name="ListOfContinentsByCodeSoapResponse">
    <part name="parameters" element="tns:ListOfContinentsByCodeResponse"/>
  </message>
  <message name="ListOfCurrenciesByNameSoapRequest">
    <part name="parameters" element="tns:ListOfCurrenciesByName"/>
  </message>
  <message name="ListOfCurrenciesByNameSoapResponse">
    <part name="parameters" element="tns:ListOfCurrenciesByNameResponse"/>
  </message>
  <message name="ListOfCurrenciesByCodeSoapRequest">
    <part name="parameters" element="tns:ListOfCurrenciesByCode"/>
  </message>
  <message name="ListOfCurrenciesByCodeSoapResponse">
    <part name="parameters" element="tns:ListOfCurrenciesByCodeResponse"/>
  </message>
  <message name="CurrencyNameSoapRequest">
    <part name="parameters" element="tns:CurrencyName"/>
  </message>
  <message name="CurrencyNameSoapResponse">
    <part name="parameters" element="tns:CurrencyNameResponse"/>
  </message>
  <message name="ListOfCountryNamesByCodeSoapRequest">
    <part name="parameters" element="tns:ListOfCountryNamesByCode"/>
  </message>
  <message name="ListOfCountryNamesByCodeSoapResponse">
    <part name="parameters" element="tns:ListOfCountryNamesByCodeResponse"/>
  </message>
  <message name="ListOfCountryNamesByNameSoapRequest">
    <part name="parameters" element="tns:ListOfCountryNamesByName"/>
  </message>
  <message name="ListOfCountryNamesByNameSoapResponse">
    <part name="parameters" element="tns:ListOfCountryNamesByNameResponse"/>
  </message>
  <message name="ListOfCountryNamesGroupedByContinentSoapRequest">
    <part name="parameters" element="tns:ListOfCountryNamesGroupedByContinent"/>
  </message>
  <message name="ListOfCountryNamesGroupedByContinentSoapResponse">
    <part name="parameters" element="tns:ListOfCountryNamesGroupedByContinentResponse"/>
  </message>
  <message name="CountryNameSoapRequest">
    <part name="parameters" element="tns:CountryName"/>
  </message>
  <message name="CountryNameSoapResponse">
    <part name="parameters" element="tns:CountryNameResponse"/>
  </message>
  <message name="CountryISOCodeSoapRequest">
    <part name="parameters" element="tns:CountryISOCode"/>
  </message>
  <message name="CountryISOCodeSoapResponse">
    <part name="parameters" element="tns:CountryISOCodeResponse"/>
  </message>
  <message name="CapitalCitySoapRequest">
    <part name="parameters" element="tns:CapitalCity"/>
  </message>
  <message name="CapitalCitySoapResponse">
    <part name="parameters" element="tns:CapitalCityResponse"/>
  </message>
  <message name="CountryCurrencySoapRequest">
    <part name="parameters" element="tns:CountryCurrency"/>
  </message>
  <message name="CountryCurrencySoapResponse">
    <part name="parameters" element="tns:CountryCurrencyResponse"/>
  </message>
  <message name="CountryFlagSoapRequest">
    <part name="parameters" element="tns:CountryFlag"/>
  </message>
  <message name="CountryFlagSoapResponse">
    <part name="parameters" element="tns:CountryFlagResponse"/>
  </message>
  <message name="CountryIntPhoneCodeSoapRequest">
    <part name="parameters" element="tns:CountryIntPhoneCode"/>
  </message>
  <message name="CountryIntPhoneCodeSoapResponse">
    <part name="parameters" element="tns:CountryIntPhoneCodeResponse"/>
  </message>
  <message name="FullCountryInfoSoapRequest">
    <part name="parameters" element="tns:FullCountryInfo"/>
  </message>
  <message name="FullCountryInfoSoapResponse">
    <part name="parameters" element="tns:FullCountryInfoResponse"/>
  </message>
  <message name="FullCountryInfoAllCountriesSoapRequest">
    <part name="parameters" element="tns:FullCountryInfoAllCountries"/>
  </message>
  <message name="FullCountryInfoAllCountriesSoapResponse">
    <part name="parameters" element="tns:FullCountryInfoAllCountriesResponse"/>
  </message>
  <message name="CountriesUsingCurrencySoapRequest">
    <part name="parameters" element="tns:CountriesUsingCurrency"/>
  </message>
  <message name="CountriesUsingCurrencySoapResponse">
    <part name="parameters" element="tns:CountriesUsingCurrencyResponse"/>
  </message>
  <message name="ListOfLanguagesByNameSoapRequest">
    <part name="parameters" element="tns:ListOfLanguagesByName"/>
  </message>
  <message name="ListOfLanguagesByNameSoapResponse">
    <part name="parameters" element="tns:ListOfLanguagesByNameResponse"/>
  </message>
  <message name="ListOfLanguagesByCodeSoapRequest">
    <part name="parameters" element="tns:ListOfLanguagesByCode"/>
  </message>
  <message name="ListOfLanguagesByCodeSoapResponse">
    <part name="parameters" element="tns:ListOfLanguagesByCodeResponse"/>
  </message>
  <message name="LanguageNameSoapRequest">
    <part name="parameters" element="tns:LanguageName"/>
  </message>
  <message name="LanguageNameSoapResponse">
    <part name="parameters" element="tns:LanguageNameResponse"/>
  </message>
  <message name="LanguageISOCodeSoapRequest">
    <part name="parameters" element="tns:LanguageISOCode"/>
  </message>
  <message name="LanguageISOCodeSoapResponse">
    <part name="parameters" element="tns:LanguageISOCodeResponse"/>
  </message>
  <portType name="CountryInfoServiceSoapType">
    <operation name="ListOfContinentsByName">
      <documentation>Returns a list of continents ordered by name.</documentation>
      <input message="tns:ListOfContinentsByNameSoapRequest"/>
      <output message="tns:ListOfContinentsByNameSoapResponse"/>
    </operation>
    <operation name="ListOfContinentsByCode">
      <documentation>Returns a list of continents ordered by code.</documentation>
      <input message="tns:ListOfContinentsByCodeSoapRequest"/>
      <output message="tns:ListOfContinentsByCodeSoapResponse"/>
    </operation>
    <operation name="ListOfCurrenciesByName">
      <documentation>Returns a list of currencies ordered by name.</documentation>
      <input message="tns:ListOfCurrenciesByNameSoapRequest"/>
      <output message="tns:ListOfCurrenciesByNameSoapResponse"/>
    </operation>
    <operation name="ListOfCurrenciesByCode">
      <documentation>Returns a list of currencies ordered by code.</documentation>
      <input message="tns:ListOfCurrenciesByCodeSoapRequest"/>
      <output message="tns:ListOfCurrenciesByCodeSoapResponse"/>
    </operation>
    <operation name="CurrencyName">
      <documentation>Returns the name of the currency (if found)</documentation>
      <input message="tns:CurrencyNameSoapRequest"/>
      <output message="tns:CurrencyNameSoapResponse"/>
    </operation>
    <operation name="ListOfCountryNamesByCode">
      <documentation>Returns a list of all stored counties ordered by ISO code</documentation>
      <input message="tns:ListOfCountryNamesByCodeSoapRequest"/>
      <output message="tns:ListOfCountryNamesByCodeSoapResponse"/>
    </operation>
    <operation name="ListOfCountryNamesByName">
      <documentation>Returns a list of all stored counties ordered by country name</documentation>
      <input message="tns:ListOfCountryNamesByNameSoapRequest"/>
      <output message="tns:ListOfCountryNamesByNameSoapResponse"/>
    </operation>
    <operation name="ListOfCountryNamesGroupedByContinent">
      <documentation>Returns a list of all stored counties grouped per continent</documentation>
      <input message="tns:ListOfCountryNamesGroupedByContinentSoapRequest"/>
      <output message="tns:ListOfCountryNamesGroupedByContinentSoapResponse"/>
    </operation>
    <operation name="CountryName">
      <documentation>Searches the database for a country by the passed ISO country code</documentation>
      <input message="tns:CountryNameSoapRequest"/>
      <output message="tns:CountryNameSoapResponse"/>
    </operation>
    <operation name="CountryISOCode">
      <documentation>This function tries to found a country based on the passed country name.</documentation>
      <input message="tns:CountryISOCodeSoapRequest"/>
      <output message="tns:CountryISOCodeSoapResponse"/>
    </operation>
    <operation name="CapitalCity">
      <documentation>Returns the  name of the captial city for the passed country code</documentation>
      <input message="tns:CapitalCitySoapRequest"/>
      <output message="tns:CapitalCitySoapResponse"/>
    </operation>
    <operation name="CountryCurrency">
      <documentation>Returns the currency ISO code and name for the passed country ISO code</documentation>
      <input message="tns:CountryCurrencySoapRequest"/>
      <output message="tns:CountryCurrencySoapResponse"/>
    </operation>
    <operation name="CountryFlag">
      <documentation>Returns a link to a picture of the country flag</documentation>
      <input message="tns:CountryFlagSoapRequest"/>
      <output message="tns:CountryFlagSoapResponse"/>
    </operation>
    <operation name="CountryIntPhoneCode">
      <documentation>Returns the internation phone code for the passed ISO country code</documentation>
      <input message="tns:CountryIntPhoneCodeSoapRequest"/>
      <output message="tns:CountryIntPhoneCodeSoapResponse"/>
    </operation>
    <operation name="FullCountryInfo">
      <documentation>Returns a struct with all the stored country information. Pass the ISO country code</documentation>
      <input message="tns:FullCountryInfoSoapRequest"/>
      <output message="tns:FullCountryInfoSoapResponse"/>
    </operation>
    <operation name="FullCountryInfoAllCountries">
      <documentation>Returns an array with all countries and all the language information stored</documentation>
      <input message="tns:FullCountryInfoAllCountriesSoapRequest"/>
      <output message="tns:FullCountryInfoAllCountriesSoapResponse"/>
    </operation>
    <operation name="CountriesUsingCurrency">
      <documentation>Returns a list of all countries that use the same currency code. Pass a ISO currency code</documentation>
      <input message="tns:CountriesUsingCurrencySoapRequest"/>
      <output message="tns:CountriesUsingCurrencySoapResponse"/>
    </operation>
    <operation name="ListOfLanguagesByName">
      <documentation>Returns an array of languages ordered by name</documentation>
      <input message="tns:ListOfLanguagesByNameSoapRequest"/>
      <output message="tns:ListOfLanguagesByNameSoapResponse"/>
    </operation>
    <operation name="ListOfLanguagesByCode">
      <documentation>Returns an array of languages ordered by code</documentation>
      <input message="tns:ListOfLanguagesByCodeSoapRequest"/>
      <output message="tns:ListOfLanguagesByCodeSoapResponse"/>
    </operation>
    <operation name="LanguageName">
      <documentation>Find a language name based on the passed ISO language code</documentation>
      <input message="tns:LanguageNameSoapRequest"/>
      <output message="tns:LanguageNameSoapResponse"/>
    </operation>
    <operation name="LanguageISOCode">
      <documentation>Find a language ISO code based on the passed language name</documentation>
      <input message="tns:LanguageISOCodeSoapRequest"/>
      <output message="tns:LanguageISOCodeSoapResponse"/>
    </operation>
  </portType>
  <binding name="CountryInfoServiceSoapBinding" type="tns:CountryInfoServiceSoapType">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <operation name="ListOfContinentsByName">
      <soap:operation soapAction="" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="ListOfContinentsByCode">
      <soap:operation soapAction="" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="ListOfCurrenciesByName">
      <soap:operation soapAction="" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="ListOfCurrenciesByCode">
      <soap:operation soapAction="" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="CurrencyName">
      <soap:operation soapAction="" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="ListOfCountryNamesByCode">
      <soap:operation soapAction="" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="ListOfCountryNamesByName">
      <soap:operation soapAction="" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="ListOfCountryNamesGroupedByContinent">
      <soap:operation soapAction="" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="CountryName">
      <soap:operation soapAction="" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="CountryISOCode">
      <soap:operation soapAction="" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="CapitalCity">
      <soap:operation soapAction="" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="CountryCurrency">
      <soap:operation soapAction="" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="CountryFlag">
      <soap:operation soapAction="" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="CountryIntPhoneCode">
      <soap:operation soapAction="" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="FullCountryInfo">
      <soap:operation soapAction="" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="FullCountryInfoAllCountries">
      <soap:operation soapAction="" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="CountriesUsingCurrency">
      <soap:operation soapAction="" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="ListOfLanguagesByName">
      <soap:operation soapAction="" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="ListOfLanguagesByCode">
      <soap:operation soapAction="" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="LanguageName">
      <soap:operation soapAction="" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="LanguageISOCode">
      <soap:operation soapAction="" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
  </binding>
  <binding name="CountryInfoServiceSoapBinding12" type="tns:CountryInfoServiceSoapType">
    <soap12:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <operation name="ListOfContinentsByName">
      <soap12:operation soapAction="" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="ListOfContinentsByCode">
      <soap12:operation soapAction="" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="ListOfCurrenciesByName">
      <soap12:operation soapAction="" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="ListOfCurrenciesByCode">
      <soap12:operation soapAction="" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="CurrencyName">
      <soap12:operation soapAction="" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="ListOfCountryNamesByCode">
      <soap12:operation soapAction="" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="ListOfCountryNamesByName">
      <soap12:operation soapAction="" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="ListOfCountryNamesGroupedByContinent">
      <soap12:operation soapAction="" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="CountryName">
      <soap12:operation soapAction="" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="CountryISOCode">
      <soap12:operation soapAction="" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="CapitalCity">
      <soap12:operation soapAction="" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="CountryCurrency">
      <soap12:operation soapAction="" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="CountryFlag">
      <soap12:operation soapAction="" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="CountryIntPhoneCode">
      <soap12:operation soapAction="" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="FullCountryInfo">
      <soap12:operation soapAction="" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="FullCountryInfoAllCountries">
      <soap12:operation soapAction="" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="CountriesUsingCurrency">
      <soap12:operation soapAction="" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="ListOfLanguagesByName">
      <soap12:operation soapAction="" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="ListOfLanguagesByCode">
      <soap12:operation soapAction="" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="LanguageName">
      <soap12:operation soapAction="" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="LanguageISOCode">
      <soap12:operation soapAction="" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
  </binding>
  <service name="CountryInfoService">
    <documentation>This DataFlex Web Service opens up country information. 2 letter ISO codes are used for Country code. There are functions to retrieve the used Currency, Language, Capital City, Continent and Telephone code.</documentation>
    <port name="CountryInfoServiceSoap" binding="tns:CountryInfoServiceSoapBinding">
      <soap:address location="http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso"/>
    </port>
    <port name="CountryInfoServiceSoap12" binding="tns:CountryInfoServiceSoapBinding12">
      <soap12:address location="http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso"/>
    </port>
  </service>
</definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso</con:endpoint></con:endpoints><con:operation id="7ef62703-6fa8-4623-910c-0aecf4861aa0" isOneWay="false" action="" name="CapitalCity" bindingOperationName="CapitalCity" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="55ce16be-74e4-4781-aa3f-d69394721e3f" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:web="http://www.oorsprong.org/websamples.countryinfo">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <web:CapitalCity>\r
         <web:sCountryISOCode>?</web:sCountryISOCode>\r
      </web:CapitalCity>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.oorsprong.org/websamples.countryinfo/CountryInfoServiceSoapType/CapitalCityRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="37c0fbd1-efc7-4554-aa98-5d53d3e8f500" isOneWay="false" action="" name="CountriesUsingCurrency" bindingOperationName="CountriesUsingCurrency" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="3fc22a1e-4c7e-42e8-9126-f0710086918f" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:web="http://www.oorsprong.org/websamples.countryinfo">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <web:CountriesUsingCurrency>\r
         <web:sISOCurrencyCode>?</web:sISOCurrencyCode>\r
      </web:CountriesUsingCurrency>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.oorsprong.org/websamples.countryinfo/CountryInfoServiceSoapType/CountriesUsingCurrencyRequest"/></con:call></con:operation><con:operation id="d88494a9-13d2-4739-9d11-2c46f27269b1" isOneWay="false" action="" name="CountryCurrency" bindingOperationName="CountryCurrency" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="0624f409-e31b-4895-b42a-b5dfed5b9637" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:web="http://www.oorsprong.org/websamples.countryinfo">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <web:CountryCurrency>\r
         <web:sCountryISOCode>?</web:sCountryISOCode>\r
      </web:CountryCurrency>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.oorsprong.org/websamples.countryinfo/CountryInfoServiceSoapType/CountryCurrencyRequest"/></con:call></con:operation><con:operation id="bf537159-de9e-4c57-b511-8825899b594f" isOneWay="false" action="" name="CountryFlag" bindingOperationName="CountryFlag" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="f381aa97-bffd-4562-9fbf-34c758415ff2" name="ES"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:web="http://www.oorsprong.org/websamples.countryinfo">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <web:CountryFlag>\r
         <web:sCountryISOCode>ES</web:sCountryISOCode>\r
      </web:CountryFlag>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.oorsprong.org/websamples.countryinfo/CountryInfoServiceSoapType/CountryFlagRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="3b242a77-a3a2-4b7a-a290-27b8fc2731ba" name="JP"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:web="http://www.oorsprong.org/websamples.countryinfo">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <web:CountryFlag>\r
         <web:sCountryISOCode>JP</web:sCountryISOCode>\r
      </web:CountryFlag>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.oorsprong.org/websamples.countryinfo/CountryInfoServiceSoapType/CountryFlagRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="af7d050b-1c61-4068-a9d2-c75a220ab65c" isOneWay="false" action="" name="CountryIntPhoneCode" bindingOperationName="CountryIntPhoneCode" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="16aa5818-6afc-4a8b-ad5a-f93ff7109fb4" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:web="http://www.oorsprong.org/websamples.countryinfo">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <web:CountryIntPhoneCode>\r
         <web:sCountryISOCode>?</web:sCountryISOCode>\r
      </web:CountryIntPhoneCode>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.oorsprong.org/websamples.countryinfo/CountryInfoServiceSoapType/CountryIntPhoneCodeRequest"/></con:call></con:operation><con:operation id="6c4d9f4f-a66d-4b4f-bb0f-2c17a2dee29c" isOneWay="false" action="" name="CountryISOCode" bindingOperationName="CountryISOCode" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="029c0d53-85f8-42de-9ccf-e26a113618f3" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:web="http://www.oorsprong.org/websamples.countryinfo">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <web:CountryISOCode>\r
         <web:sCountryName>?</web:sCountryName>\r
      </web:CountryISOCode>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.oorsprong.org/websamples.countryinfo/CountryInfoServiceSoapType/CountryISOCodeRequest"/></con:call></con:operation><con:operation id="be85ba96-1349-4913-b8f0-de611eaa2426" isOneWay="false" action="" name="CountryName" bindingOperationName="CountryName" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="ce294987-2a8d-46f1-9acc-91f60bcb51d0" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:web="http://www.oorsprong.org/websamples.countryinfo">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <web:CountryName>\r
         <web:sCountryISOCode>?</web:sCountryISOCode>\r
      </web:CountryName>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.oorsprong.org/websamples.countryinfo/CountryInfoServiceSoapType/CountryNameRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="779b0219-f117-4635-baab-4f49e78593fe" isOneWay="false" action="" name="CurrencyName" bindingOperationName="CurrencyName" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="74832917-b392-4433-b1df-d64a87da74a1" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:web="http://www.oorsprong.org/websamples.countryinfo">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <web:CurrencyName>\r
         <web:sCurrencyISOCode>?</web:sCurrencyISOCode>\r
      </web:CurrencyName>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.oorsprong.org/websamples.countryinfo/CountryInfoServiceSoapType/CurrencyNameRequest"/></con:call></con:operation><con:operation id="26b180ae-2526-4b35-b99a-398f5359bbdc" isOneWay="false" action="" name="FullCountryInfo" bindingOperationName="FullCountryInfo" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="7d59370c-5bd3-4de4-b024-ab6981136acb" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:web="http://www.oorsprong.org/websamples.countryinfo">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <web:FullCountryInfo>\r
         <web:sCountryISOCode>?</web:sCountryISOCode>\r
      </web:FullCountryInfo>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.oorsprong.org/websamples.countryinfo/CountryInfoServiceSoapType/FullCountryInfoRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="b81c1f99-e769-4c4b-b5fe-3c4f6022308c" isOneWay="false" action="" name="FullCountryInfoAllCountries" bindingOperationName="FullCountryInfoAllCountries" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="78d234cb-fc7f-4c7f-a9bd-c6c5d06f86a7" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:web="http://www.oorsprong.org/websamples.countryinfo">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <web:FullCountryInfoAllCountries/>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.oorsprong.org/websamples.countryinfo/CountryInfoServiceSoapType/FullCountryInfoAllCountriesRequest"/></con:call></con:operation><con:operation id="82009fb2-d6d5-4fb1-9d04-876df0ef4e6e" isOneWay="false" action="" name="LanguageISOCode" bindingOperationName="LanguageISOCode" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="bb9351b6-d9ec-44a3-997c-f9765512738e" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:web="http://www.oorsprong.org/websamples.countryinfo">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <web:LanguageISOCode>\r
         <web:sLanguageName>?</web:sLanguageName>\r
      </web:LanguageISOCode>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.oorsprong.org/websamples.countryinfo/CountryInfoServiceSoapType/LanguageISOCodeRequest"/></con:call></con:operation><con:operation id="21580875-8c78-481f-b97b-8bf7e2213140" isOneWay="false" action="" name="LanguageName" bindingOperationName="LanguageName" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="58ad3cb4-cd9e-441f-ac52-4e3136ec3a6e" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:web="http://www.oorsprong.org/websamples.countryinfo">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <web:LanguageName>\r
         <web:sISOCode>?</web:sISOCode>\r
      </web:LanguageName>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.oorsprong.org/websamples.countryinfo/CountryInfoServiceSoapType/LanguageNameRequest"/></con:call></con:operation><con:operation id="6a3f1ccb-d244-4d5b-8392-1a317eca39b8" isOneWay="false" action="" name="ListOfContinentsByCode" bindingOperationName="ListOfContinentsByCode" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="031c2eaa-defa-43d7-8e0d-b87e012f861a" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:web="http://www.oorsprong.org/websamples.countryinfo">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <web:ListOfContinentsByCode/>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.oorsprong.org/websamples.countryinfo/CountryInfoServiceSoapType/ListOfContinentsByCodeRequest"/></con:call></con:operation><con:operation id="3d45c2e6-c202-4e62-ba2f-b9376bdfe789" isOneWay="false" action="" name="ListOfContinentsByName" bindingOperationName="ListOfContinentsByName" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="dc94b17b-29c5-4329-80b9-6077cf07f847" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:web="http://www.oorsprong.org/websamples.countryinfo">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <web:ListOfContinentsByName/>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.oorsprong.org/websamples.countryinfo/CountryInfoServiceSoapType/ListOfContinentsByNameRequest"/></con:call></con:operation><con:operation id="65509017-d348-427d-afb2-2ae39ae177a6" isOneWay="false" action="" name="ListOfCountryNamesByCode" bindingOperationName="ListOfCountryNamesByCode" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="4e990953-ac2d-4539-94fe-b6f3567871f9" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:web="http://www.oorsprong.org/websamples.countryinfo">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <web:ListOfCountryNamesByCode/>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.oorsprong.org/websamples.countryinfo/CountryInfoServiceSoapType/ListOfCountryNamesByCodeRequest"/></con:call></con:operation><con:operation id="ede8614f-3ba9-4f42-b8c3-6789e4b0fee1" isOneWay="false" action="" name="ListOfCountryNamesByName" bindingOperationName="ListOfCountryNamesByName" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="dae20db4-c7bd-4bca-871a-5b8db6aaa83b" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:web="http://www.oorsprong.org/websamples.countryinfo">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <web:ListOfCountryNamesByName/>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.oorsprong.org/websamples.countryinfo/CountryInfoServiceSoapType/ListOfCountryNamesByNameRequest"/></con:call></con:operation><con:operation id="45f593a6-0e37-427a-9ce2-b792be9af913" isOneWay="false" action="" name="ListOfCountryNamesGroupedByContinent" bindingOperationName="ListOfCountryNamesGroupedByContinent" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="316366a6-78ff-46dd-aa11-ba899630e062" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:web="http://www.oorsprong.org/websamples.countryinfo">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <web:ListOfCountryNamesGroupedByContinent/>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.oorsprong.org/websamples.countryinfo/CountryInfoServiceSoapType/ListOfCountryNamesGroupedByContinentRequest"/></con:call></con:operation><con:operation id="477cfaad-015a-4429-af6a-0412878c2613" isOneWay="false" action="" name="ListOfCurrenciesByCode" bindingOperationName="ListOfCurrenciesByCode" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="cf61c99a-d68f-439c-8fab-6f4b174abc29" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:web="http://www.oorsprong.org/websamples.countryinfo">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <web:ListOfCurrenciesByCode/>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.oorsprong.org/websamples.countryinfo/CountryInfoServiceSoapType/ListOfCurrenciesByCodeRequest"/></con:call></con:operation><con:operation id="64787836-db5f-4dad-9fe7-bdd391044fb1" isOneWay="false" action="" name="ListOfCurrenciesByName" bindingOperationName="ListOfCurrenciesByName" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="92e6ff12-6fe9-47a3-b38a-8ceebb70cfa8" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:web="http://www.oorsprong.org/websamples.countryinfo">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <web:ListOfCurrenciesByName/>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.oorsprong.org/websamples.countryinfo/CountryInfoServiceSoapType/ListOfCurrenciesByNameRequest"/></con:call></con:operation><con:operation id="27e53253-fb39-47be-8ea3-35ded6f7dd20" isOneWay="false" action="" name="ListOfLanguagesByCode" bindingOperationName="ListOfLanguagesByCode" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="5295a550-8208-4fad-96a7-48e74d34ba12" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:web="http://www.oorsprong.org/websamples.countryinfo">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <web:ListOfLanguagesByCode/>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.oorsprong.org/websamples.countryinfo/CountryInfoServiceSoapType/ListOfLanguagesByCodeRequest"/></con:call></con:operation><con:operation id="feed273d-519b-45d2-a127-9705460dc3e0" isOneWay="false" action="" name="ListOfLanguagesByName" bindingOperationName="ListOfLanguagesByName" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="88f9efcb-13fb-4b58-ba76-e68b424878cd" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:web="http://www.oorsprong.org/websamples.countryinfo">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <web:ListOfLanguagesByName/>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.oorsprong.org/websamples.countryinfo/CountryInfoServiceSoapType/ListOfLanguagesByNameRequest"/></con:call></con:operation></con:interface><con:testSuite id="ac115fd4-eb14-43f0-a32f-bca83ad3aefd" name="SCN01_SMOKE_TEST"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="7f5bdfb2-4dd8-4f90-a312-c3ab3a4c1a6d" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SCN01_ListOfCountryNamesByCodeLoopFullCountryInfo" searchProperties="true"><con:settings/><con:testStep type="properties" name="Propiedades" id="8b2ff9a6-e4c8-4dc1-9511-922b7aa70029"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties/></con:config></con:testStep><con:testStep type="delay" name="Delay 1" id="2aab259e-5d3d-4133-9019-5daaad9a9806"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="request" id="8492ad9d-644e-45aa-9e9a-5ee6ce9ca398" name="TX00_ListOfCountryNamesByCode"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>CountryInfoServiceSoapBinding</con:interface><con:operation>ListOfCountryNamesByCode</con:operation><con:request name="TX00_ListOfCountryNamesByCode" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="cff7db86-7b3f-4e18-afa2-c6bfa4ba69af"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:web="http://www.oorsprong.org/websamples.countryinfo">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <web:ListOfCountryNamesByCode/>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="8a396f63-51c3-4df5-beca-1e5de06c64fd" name="SOAP Response"/><con:assertion type="Schema Compliance" id="147cc6cb-faf7-439a-aed4-02f0846c99e1" name="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="Valid HTTP Status Codes" id="f1aec486-043a-470a-9d54-d3c16d4dc4a6" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.oorsprong.org/websamples.countryinfo/CountryInfoServiceSoapType/ListOfCountryNamesByCodeRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Groovy - Almacenar mapIsoName" id="6fb9019a-7354-4464-aaad-eb915c06e304"><con:settings/><con:config><script>import groovy.json.*

// Obtener y parsear el XML de la respuesta del paso anterior
def step = testRunner.testCase.getTestStepByName("TX00_ListOfCountryNamesByCode")
def resStr = step.getPropertyValue("Response")
def resXML = new XmlSlurper()
	.parseText(resStr)
	.declareNamespace(ns1: 'http://www.oorsprong.org/websamples.countryinfo')

// Almacenar en un mapa [sISOCode : sName]
def map = [:]
def nodes = resXML.'**'.findAll {it.name() == 'tCountryCodeAndName'}
nodes.each {node ->
	map[node.sISOCode.text()] = node.sName.text()
}

// Guardar en una propiedad (en el testStep "Propiedades")
// XXX No se si es mejor guardar la propiedad a nivel de testCase
testRunner.testCase.getTestStepByName("Propiedades")
.setPropertyValue(
	'mapIsoName',
	JsonOutput.toJson(map)
)

</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy - Loop TX01" id="1323c4a0-5c90-46d2-a3a1-132b0e0db59d"><con:settings/><con:config><script>import groovy.json.*;

// Después de este test step, ir directamente al final del test case, sin hacer TX01
testRunner.gotoStepByName("NoOp")

// Leer y parsear mapa de [sISOCode : sName]
def propiedades = testRunner.testCase.getTestStepByName("Propiedades")
def map = new JsonSlurper().parseText(propiedades.getPropertyValue("mapIsoName"))

// Iterar el mapa, preparando las variables ${Propiedades#ISOCode} y ${Propiedades#Name},
// ejecutando un delay y luego el paso TX01
map.each { sISOCode, sName ->
	log.info "sISOCode = ${sISOCode}, sName = ${sName}"
	propiedades.setPropertyValue("ISOCode", sISOCode)
	propiedades.setPropertyValue("Name", sName)
	testRunner.runTestStepByName("Delay 1")
	testRunner.runTestStepByName("TX01_FullCountryInfo")
}

</script></con:config></con:testStep><con:testStep type="request" id="69ef6e26-ee51-4945-be17-58e3198d6016" name="TX01_FullCountryInfo"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>CountryInfoServiceSoapBinding</con:interface><con:operation>FullCountryInfo</con:operation><con:request name="TX01_FullCountryInfo" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="e35d7ecf-59f5-4092-b08f-f64199b35035"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:web="http://www.oorsprong.org/websamples.countryinfo">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <web:FullCountryInfo>\r
         <web:sCountryISOCode>${Propiedades#ISOCode}</web:sCountryISOCode>\r
      </web:FullCountryInfo>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="3fbdbf33-04ad-4d85-b482-98af102ba221" name="SOAP Response"/><con:assertion type="Schema Compliance" id="fc41aaf7-eb93-4e0b-a377-420774978f56" name="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="Valid HTTP Status Codes" id="fd4d2c67-c136-4dcb-862e-d4cdd66b6646" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple NotContains" id="e3dcc6f7-a047-4c6a-884d-6aaab50e5953" name="Not Contains"><con:configuration><token>Country not found in the database</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" id="a2f19d6f-3c2a-4e03-88bf-ee40e913b835" name="XPath Match"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace m='http://www.oorsprong.org/websamples.countryinfo';

//m:sName</path><content>${Propiedades#Name}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.oorsprong.org/websamples.countryinfo/CountryInfoServiceSoapType/FullCountryInfoRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="delay" name="NoOp" id="74898e45-bdc5-406d-8331-488b34bc4f9f"><con:settings/><con:config><delay>0</delay></con:config></con:testStep><con:properties><con:property><con:name>mapIsoName</con:name><con:value><![CDATA[{"AD":"Andorra","AE":"United Arab Emirates","AF":"Afghanistan","AG":"Antigua & Barbuda","AI":"Anguilla","AL":"Albania","AM":"Armenia","AN":"Netherlands Antilles","AO":"Angola","AQ":"Antarctica","AR":"Argentina","AS":"American Samoa","AT":"Austria","AU":"Australia","AW":"Aruba","AX":"\u00c5land Islands","AZ":"Azerbaijan","BA":"Bosnia & Herzegovina","BB":"Barbados","BD":"Bangladesh","BE":"Belgium","BF":"Burkina Faso","BG":"Bulgaria","BH":"Bahrain","BI":"Burundi","BJ":"Benin","BL":"Saint Barth\u00e9lemy","BM":"Bermuda","BN":"Brunei-Darussalam","BO":"Bolivia","BQ":"Bonaire, Sint Eustatius and Saba","BR":"Brazil","BS":"Bahamas","BT":"Bhutan","BV":"Bouvet Island","BW":"Botswana","BY":"Belarus","BZ":"Belize","CA":"Canada","CC":"Cocos (Keeling) Islands","CD":"Congo, Democratic Republic","CF":"Central African Republic","CG":"Congo","CH":"Switzerland","CI":"C\u00f4te D'Ivoire (Ivory Coast)","CK":"Cook Islands","CL":"Chile","CM":"Cameroon","CN":"China","CO":"Colombia","CR":"Costa Rica","CU":"Cuba","CV":"Cape Verde","CW":"Cura\u00e7ao","CX":"Chrismas Island","CY":"Cyprus","CZ":"Czech Republic","DE":"Germany","DJ":"Djibouti","DK":"Denmark","DM":"Dominica","DO":"Dominican Republic","DZ":"Algeria","EC":"Ecuador","EE":"Estonia","EG":"Egypt","EH":"Western Sahara","ER":"Eritrea","ES":"Spain","ET":"Ethiopia","FI":"Finland","FJ":"Fiji","FK":"Falkand Islands (Malvinas)","FM":"Micronesia  (Federa States of)","FO":"Faroe Islands","FR":"France","GA":"Gabon","GB":"United Kingdom","GD":"Grenada","GE":"Georgia","GF":"French Guiana","GH":"Ghana","GI":"Gibraltar","GL":"Greenland","GM":"Gambia","GN":"Guinea","GP":"Guadeloupe","GQ":"Equatorial Guinea","GR":"Greece","GS":"South Georgia & South Sandwich Islands","GT":"Guatemala","GU":"Guam","GW":"Guinea-Bissau","GY":"Guyana","HK":"Hong Kong","HM":"Heard Island And McDonald Islands","HN":"Honduras","HR":"Croatia","HT":"Haiti","HU":"Hungary","ID":"Indonesia","IE":"Ireland","IL":"Israel","IN":"India","IO":"British Indian Ocean Territory","IQ":"Iraq","IR":"Iran","IS":"Iceland","IT":"Italy","JM":"Jamaica","JO":"Jordan","JP":"Japan","KE":"Kenya","KG":"Kyrgyzstan","KH":"Cambodia","KI":"Kiribati","KM":"Comoros","KN":"St. Kitts & Nevis","KP":"North Korea","KR":"South Korea","KW":"Kuwait","KY":"Cayman Islands","KZ":"Kazakhstan","LA":"Laos","LB":"Lebanon","LC":"St. Lucia","LI":"Liechtenstein","LK":"Sri Lanka","LR":"Liberia","LS":"Lesotho","LT":"Lithuania","LU":"Luxembourg","LV":"Latvia","LY":"Libyan Arab Jamahiriya","MA":"Morocco","MC":"Monaco","MD":"Moldova, Republic of","ME":"Montenegro","MF":"Collectivity of Saint Martin","MG":"Madagascar","MH":"Marshall Islands","MK":"Macedonia  (former YR)","ML":"Mali","MM":"Myanmar (Burma)","MN":"Mongolia","MO":"Macao","MP":"Northern Mariana Islands","MQ":"Martinique","MR":"Mauritania","MS":"Montserrat","MT":"Malta","MU":"Mauritius","MV":"Maldives (Maladive Ilands)","MW":"Malawi","MX":"Mexico","MY":"Malaysia","MZ":"Mozambique","NA":"Namibia","NC":"New Caledonia","NE":"Niger","NF":"Norfolk Island","NG":"Nigeria","NI":"Nicaragua","NL":"Netherlands","NO":"Norway","NP":"Nepal","NR":"Nauru","NU":"Niue","NZ":"New Zealand","OM":"Oman","PA":"Panama","PE":"Peru","PF":"French Polynesia","PG":"Papua-New Guinea","PH":"Philippines","PK":"Pakistan","PL":"Poland","PM":"Saint Pierre And Micquelon","PN":"Pitcairn","PR":"Puerto Rico","PS":"Palestinian Territory, Occupied","PT":"Portugal","PW":"Palau","PY":"Paraguay","QA":"Quatar","RE":"Reunion","RO":"Romania","RS":"Serbia","RU":"Russian Federation","RW":"Rwanda","SA":"Saudi Arabia","SB":"Solomon Islands","SC":"Seychelles","SD":"Sudan","SE":"Sweden","SG":"Singapore","SH":"Saint Helena, Ascension and Tristan da Cunha","SI":"Slovenia","SJ":"Svalbard And Jan Mayen","SK":"Slovakia","SL":"Sierra Leone","SM":"San Marino","SN":"Senegal","SO":"Somalia","SR":"Suriname","ST":"Sao Tome & Principe","SV":"El Salvador","SX":"Sint-Maarten","SY":"Syrian Arab Republic","SZ":"Swaziland","TC":"Turks And Caicos Islands","TD":"Chad","TF":"French Southern Territories","TG":"Togo","TH":"Thailand","TJ":"Tajikistan","TK":"Tokelau","TL":"Timor-Leste","TM":"Turkmenistan","TN":"Tunisia","TO":"Tonga","TR":"Turkey","TT":"Trinidad & Tobago","TV":"Tuvalu","TW":"Taiwan","TZ":"Tanzania","UA":"Ukraine","UG":"Uganda","UM":"United States Minor Outlying Islands","US":"United States","UY":"Uruguay","UZ":"Uzbekistan","VA":"Vatican City","VC":"St. Vincent & Grenadines","VE":"Venezuela","VG":"Virgin Islands, British","VI":"Virgin Islands, U.S.","VN":"Vietnam","VU":"Vanuatu","WF":"Wallis And Futuna","WS":"Western Samoa","YE":"Yemen","YT":"Mayotte","ZA":"South Africa","ZM":"Zambia","ZW":"Zimbabwe"}]]></con:value></con:property></con:properties></con:testCase><con:properties/></con:testSuite><con:properties/><con:wssContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:afterRunScript><![CDATA[/**
 @Author : Matthias Dirickx
 @Description : Collecting statuses and copying them to a file - based on the 'set endpoint' script from Pradeep Bishnoi
 https://learnsoapui.wordpress.com/2012/04/27/want-to-change-endpoInteger-url-in-a-projecttestsuitestestcases/
  
  * This script retrieves the static statuses from all items in a project and then exports those results to a simple html file.
  * There is no extra css file or other stuff included. So you can happily pass around the html without worrying about making available additional resources.
  *Assumptions:
  *  - there is a variable testDataPath
  *  - The variable testDataPath is set as JAVA String (backslashes are doubled because of escape function)
  *  - The path ends with a double backslash
  *  - Alternatively you can just use forward slashes of course. And then you normally don't have to double them.
  *  - The path results are written to the 'Execution Results' folder
  *  - Name of file is set automatically to soapUIProjectName+date time stamp
  *  - When all steps are passed, the test case is VALID
  *  - When one step fails, the test case is set to FAILED
  *  - In any other case the test case result is set to UNKNOWN
  *  - There is a count summary. Items that are disabled are not taken into account for the totals of this statistic.
 @Usage : Make the script available through a SoapUi Interface implementation or put it in a project tear-down script.
 Alternatively you may add it to a SoapUI custom action.
 Example implementation: https://fuckagile.wordpress.com/2016/08/17/soapui-action-architecture-and-the-groovy-script-engine/
 */

import java.awt.Desktop;
import java.lang.Math;

import com.eviware.soapui.support.UISupport;




/*Properties
  --> wrap in function because otherwise soapui complains about variable not found in class.
*/
private String getHeaderImageUrl() {
    return "https://i.imgur.com/MXXgjzP.png"
}



///////////////////////////////////////////////////
//    LAUNCH SCRIPT                             //
/////////////////////////////////////////////////
writeReportToDisk(buildHtmlPage());



///////////////////////////////////////////////////
//    HELPER METHODS                            //
/////////////////////////////////////////////////
public boolean isAssertable(Class<?> claz) {
    boolean isAssertable = com.eviware.soapui.model.testsuite.Assertable.class.isAssignableFrom(claz);
    return isAssertable;
}

private String deriveTestCaseStatus(tc) {
    
    def tsStatusList = [];
    def tcStatus;
    testStepList = tc.getTestStepList();

    testStepList.each {
        
        if(isAssertable(it.class) && it.getAssertionStatus()!=null) {
          tsStatusList.add(it.getAssertionStatus().toString());
        }

    }

    if(tsStatusList.contains('FAILED')) {
        tcStatus = 'FAILED';
    } else if(tsStatusList.every{it.equals('VALID');}){
        tcStatus = 'VALID';
    } else {
        tcStatus = 'UNKNOWN';
    }
    
    return tcStatus;
}

private String deriveTestSuiteStatus(tcStatusCollection) {
    
    def testSuiteStatus;
    
    if(tcStatusCollection.contains('FAILED')) {
        tcStatus = 'FAILED';
    } else if(tcStatusCollection.every{it.equals('VALID');}){
        tcStatus = 'VALID';
    } else {
        tcStatusCollection = 'UNKNOWN';
    }

    return testSuiteStatus;
}

private String getStatusClass(String status) {
    
    statusClass = null;
    
    switch (status) {
        case 'VALID' : statusClass = 'pass';
        break;
        case 'FAILED' : statusClass = 'fail';
        break;
        default : statusClass = 'defaultStatus';
    }
    
    return statusClass;
}



///////////////////////////////////////////////////
//    Build Table Methods                       //
/////////////////////////////////////////////////

/*
The details table contains the item by item information.
- Title with testsuite name
- Per test case:
    - The title
    - A table per step with:
        - assertion type
        - assertion name
        - assertion status
        - assertion message
*/
//////////DETAILS//////////////////////////////////////////////////////
public String getDetailTableData() {

    def StringBuilder detail = new StringBuilder()
    //get test suites
    testSuites = project.getTestSuiteList()

    //iterate over suites
    testSuites.each {
      
        if(!it.isDisabled()) {
      
            testsuiteName = it.getName()
            testsuiteId = it.getId()
            testsuiteDescription = it.getDescription()

            detail.append("<h3><a name=\"$testsuiteId\">$testsuiteName</a></h3>")
            detail.append("<div class=\"testCaseDescription\">")
                detail.append("<span style=\"vertical-align:middle;\">")
                    detail.append("<b>Test Suite Description:</b><br>")
                    detail.append("$testsuiteDescription")
                detail.append("</span>")
            detail.append("</div>")

            //get test cases
            testCases = it.getTestCaseList()
      
            //iterate over test cases
            testCases.each {

                if(!it.isDisabled()) {
                    testcaseName = it.getName()
                    testcaseId = it.getId()
                    testcaseDescription = it.getDescription()
                    
                    detail.append("<h4><a name=\"$testcaseId\">$testcaseName</a></h4>")
                    detail.append("<div class=\"testCaseDescription\">")
                        detail.append("<span style=\"vertical-align:middle;\">")
                            detail.append("<b>Test Case Description:</b><br>")
                            detail.append("$testcaseDescription")
                        detail.append("</span>")
                    detail.append("</div>")
                  
                    testSteps = it.getTestStepList()
                    
                    detail.append("<fieldset>")
                    detail.append("<legend>Test Case Steps</legend>")
                    
                    testSteps.each {
                        teststepName = it.label
                        teststepType = it.getClass().getSimpleName()
                
                        detail.append("<table>")
                            detail.append("<caption><h5>$teststepName<span style=\"font-weight:normal;font-size:italic;\"> ($teststepType)</span></h5></caption>")
                            detail.append("<tr>")
                                detail.append("<th>Type</th>")
                                detail.append("<th>Name</th>")
                                detail.append("<th>Status</th>")
                                detail.append("<th>Errors</th>")
                            detail.append("</tr>")

                        if(!it.isDisabled()) {

                            //assertable content check
                            if(isAssertable(it.class)) {
                                testStepStatus = it.getAssertionStatus()
                                assertionList = it.getAssertionList()
                          
                                //testAssertion list
                                if(assertionList.size()>0){
                                    assertionList.each {
                                        assertionName = it.label
                                        assertionStatus = it.status
                                        assertionType = it.getClass().getSimpleName()
                                      
                                        StringBuilder assertionInfoSb = new StringBuilder()
                                      
                                        it.getErrors().each {
                                            assertionInfoSb.append(it.getMessage().toString())
                                        }
                                        assertionInfo = assertionInfoSb.toString()
                                        assertionStatusHtmlClass = getStatusClass(assertionStatus.toString())
                              
                                        detail.append("<tr>")
                                            detail.append("<td>$assertionType</td>")
                                            detail.append("<td>$assertionName</td>")
                                            detail.append("<td class=\"$assertionStatusHtmlClass\">$assertionStatus</td>")
                                            detail.append("<td>$assertionInfo</td>")
                                        detail.append("</tr>")
                                    }
                                //If no assertions are available    
                                } else {
                                    detail.append("<tr><td colspan=\"4\">There are no assertions available for this test step.</td></tr>")
                                }
                            //If the test step is not assertable
                            }  else {
                                detail.append("<tr><td colspan=\"4\">This test step is not assertable.</td></tr>")
                            }
                        }    
                  
                        detail.append("</table>")
                    }
                    detail.append("</fieldset>")
                }
            }
        }
    }
    
    return detail
}
///////////////////////////////////////////////////////////////////////

//////////OVERVIEW/////////////////////////////////////////////////////
public String getOverviewTableData() {

    def StringBuilder overview = new StringBuilder()
    
    overview.append("<table class=\"listOverview\">")
        overview.append("<caption>Test Suites &amp; Test Cases</caption>")
        overview.append("<tbody>")
            overview.append("<tr>")
                overview.append("<th>Test Suite Name</th>")
                overview.append("<th>Test Case Name</th>")
                overview.append("<th>Test Case Status</th>")
            overview.append("</tr>")
    
    //get test suites
    testSuites = project.getTestSuiteList()

    //iterate over suites
    testSuites.each {
      
        //Reset test case status collector
        tcStatusCollector = [];
      
        if(!it.isDisabled()) {
      
            testsuiteName = it.label
            testsuiteId = it.getId()

            //get test cases
            testCases = it.getTestCaseList()
      
            //iterate over test cases
            firstTestCase = true
            Integer testCaseCount=0
          
            testCases.each {
            
                if(!it.isDisabled()) {
                    testCaseCount++
                }
            }

            testCases.each {
                if(!it.isDisabled()) {
                    testcaseName = it.label
                    testcaseId = it.getId()
               
                    //get the test case status (indirect - binary pass fail)
                    testcaseStatus = deriveTestCaseStatus(it)
                    tcStatusCollector.add(testcaseStatus)
                    statusHtmlClass = getStatusClass(testcaseStatus)

                    overview.append("<tr>")
                    
                    if(firstTestCase) {
                        overview.append("<td class=\"hooverable\" rowspan=\"$testCaseCount\"><a href=\"#$testsuiteId\"><div class=\"linkBlock\">$testsuiteName</div></a></td>")
                    }
                        overview.append("<td class=\"hooverable\"><a href=\"#$testcaseId\"><div class=\"linkBlock\">$testcaseName</div></a></td>")
                        overview.append("<td class=\"$statusHtmlClass\">$testcaseStatus</td>")
                    overview.append("</tr>")
               
                    firstTestCase = false
                }   
            }
            
            testSuiteStatus = deriveTestSuiteStatus(tcStatusCollector)
        }
    }
    overview.append("</tbody>")
    overview.append("</table>")
    
    return overview
}
///////////////////////////////////////////////////////////////////////////////////

//////////////NUMERIC OVERVIEW TABLE///////////////////////////////////////////////
/**
* The setup is as follows:
*     Initialize the counters ( initialize at value 0 )
*
*     Next, there are a series of nested iterations.
* 
*     Test suites --> Test cases --> Test steps --> Assertions
* 
*     At each level:
*
*         1. Add to the total
*         2. Initialize a list for statuses if needed
*         3. Check if enabled
*             3.1 If enabled --> Dive deeper and start at 1
*             3.2 If not enabled --> Add 1 to 'disabled' counter for:
*                     - the item in question
*                     - each child item down to the level of assertions
*         4. Add 1 to correct counter
*
*     After these counter updates, these are used in generating the table.
*
*     The table is generated rediculously verbose in order to make the code accesible.
**/
private String getCountTable() {
    // Initialize the count
    Integer testSuitePass = 0;
    Integer testSuiteFail = 0;
    Integer testSuiteUnknown = 0;
    Integer testSuiteDisabled = 0;
    Integer testSuiteTotal = 0;
    Integer testCasePass = 0;
    Integer testCaseFail = 0;
    Integer testCaseUnknown = 0;
    Integer testCaseDisabled = 0;
    Integer testCaseTotal = 0;
    Integer testStepPass = 0;
    Integer testStepFail = 0;
    Integer testStepUnknown = 0;
    Integer testStepDisabled = 0;
    Integer testStepTotal = 0;
    Integer testAssertionPass = 0;
    Integer testAssertionFail = 0;
    Integer testAssertionUnknown = 0;
    Integer testAssertionDisabled = 0;
    Integer testAssertionTotal = 0;

    // Get the test suites
    testSuites = project.getTestSuiteList();

    // For each suite, check suite status and dive into child items.
    testSuites.each {
        if(!it.isDisabled()) {
            // Add 1 to total of test suites.
            // Added here after isDisabled check because only enabled are counted for stats.
            // Choice, change if you like.
            testSuiteTotal++;

            def caseStatusList = [];

            testCases = it.getTestCaseList();

            testCases.each {
                def testcaseStatus = "UNKNOWN";
                
                if(!it.isDisabled()) {
                    testCaseTotal++;

                    def stepStatusList = [];

                    testSteps = it.getTestStepList();
                    
                    testSteps.each {
                        
                        if(!it.isDisabled()) {
                            testStepTotal++;

                            if(isAssertable(it.class) && it.getAssertionStatus() != null) {
                                def testStepStatus = it.getAssertionStatus().toString();

                                if (testStepStatus == 'VALID') {
                                    testStepPass++;
                                } else {
                                    if(testStepStatus == 'FAILED') {
                                        testStepFail++;
                                    } else {
                                        testStepUnknown++;
                                    }
                                }

                                stepStatusList.add(testStepStatus);

                                def testAssertions = it.getAssertionList();

                                testAssertions.each {
                                    
                                    if(!it.isDisabled()) {
                                        testAssertionTotal++;

                                        def assertionStatus = it.status;
                                        if (assertionStatus.toString() == "VALID") {
                                          testAssertionPass++;
                                        } else {
                                          if(assertionStatus.toString() == "FAILED") {
                                            testAssertionFail++;
                                          } else {
                                            testAssertionUnknown++;
                                          }
                                        }
                                    } else {
                                        testAssertionDisabled++;
                                    }
                                }//end of testassertions.each
                            } else {
                                //skip this case (not assertable) --> do not do anything
                            }

                        } else {//test step else
                            testStepDisabled++;
                            if(isAssertable(it.class)) {
                                it.getAssertionList().each {
                                    testAssertionDisabled++;
                                }
                            }
                        }
                    }//End of teststeps.each

                    if(stepStatusList.contains('FAILED')) {
                        testcaseStatus = 'FAILED';
                        testCaseFail++;
                    } else if(stepStatusList.every{it.equals('VALID');}){
                        testcaseStatus = 'VALID';
                        testCasePass++;
                    } else {
                        testcaseStatus = 'UNKNOWN';
                        testCaseUnknown++;
                    }

                    caseStatusList.add(testcaseStatus);

                } else {//test case else
                    testCaseDisabled++;
                    it.getTestStepList().each {
                        testStepDisabled++;
                        if(isAssertable(it.class)) {
                            it.getAssertionList().each {
                                testAssertionDisabled++;
                            }
                        }
                    }
                }
            }//end of testcases.each

            if(caseStatusList.contains('FAILED')) {
                testSuiteFail++;
            } else if(caseStatusList.every{it.equals('VALID');}){
                testSuitePass++;
            } else {
                testSuiteUnknown++;
            }

        } else {//test suite else
            testSuiteDisabled++;
            it.getTestCaseList().each {
                testCaseDisabled++;
                it.getTestStepList().each {
                    testStepDisabled++;
                    if(isAssertable(it.class)) {
                        it.getAssertionList().each {
                            testAssertionDisabled++;
                        }
                    }
                }
            }
        }//end of else
    }//end of testsuites.each
    
    //Initialize stringbuilder
    def StringBuilder overview = new StringBuilder();
    

    //Build html - No loops and iteration because then there needs to be an object instead of just x integers we can use.
    overview.append("<table class=\"numOverview\">")
        overview.append("<caption>Numeric Overview</caption>")
        overview.append("<tbody>")

            overview.append("<tr>")
                overview.append("<th>Level</th>")
                overview.append("<th>Passed</th>")
                overview.append("<th>Failed</th>")
                overview.append("<th>Unknown</th>")
                overview.append("<th>Total</th>")
            overview.append("</tr>")

            overview.append("<tr>")
                overview.append("<th>Test Suite</th>")
                //This is repeated x times for each status on each level
                overview.append("<td>")
                    //Center overlay is to display the count (transparant, only text visible)
                    overview.append("<div class=\"centerOverLay\">$testSuitePass</div>")
                    //Calculate the % width of the overlay to hide the fade bar.
                    //The fade bar is put on screen in full, and a white rectangle covers the part we don't need.
                    //Hence 100 - x
                    width = 100 - Math.round((testSuitePass / testSuiteTotal) * 100)
                    //Set the div to hide the part of the fade we don't need
                    overview.append("<div class=\"coverFade\" style=\"width:$width%\">&nbsp;</div>")
                    //Set up the fade bar over the width of the td item.
                    overview.append("<div class=\"greenFadeBar\">&nbsp;</div>")
                overview.append("</td>")
                overview.append("<td>")
                    overview.append("<div class=\"centerOverLay\">$testSuiteFail</div>")
                    width = 100 - Math.round((testSuiteFail / testSuiteTotal) * 100)
                    overview.append("<div class=\"coverFade\" style=\"width:$width%\">&nbsp;</div>")
                    overview.append("<div class=\"redFadeBar\">&nbsp;</div>")
                overview.append("</td>")
                overview.append("<td>")
                    overview.append("<div class=\"centerOverLay\">$testSuiteUnknown</div>")
                    width = 100 - Math.round((testSuiteUnknown / testSuiteTotal) * 100)
                    overview.append("<div class=\"coverFade\" style=\"width:100%\">&nbsp;</div>")
                    overview.append("<div class=\"orangeFadeBar\">&nbsp;</div>")
                overview.append("</td>")
                overview.append("<td class=\"defaultStatus\">$testSuiteTotal</td>")
            overview.append("</tr>")
            overview.append("<tr>")
                overview.append("<th>Test Case</th>")
                overview.append("<td>")
                    overview.append("<div class=\"centerOverLay\">$testCasePass</div>")
                    width = 100 - Math.round((testCasePass / testCaseTotal) * 100)
                    overview.append("<div class=\"coverFade\" style=\"width:$width%\">&nbsp;</div>")
                    overview.append("<div class=\"greenFadeBar\">&nbsp;</div>")
                overview.append("</td>")
                overview.append("<td>")
                    overview.append("<div class=\"centerOverLay\">$testCaseFail</div>")
                    width = 100 - Math.round((testCaseFail / testCaseTotal) * 100)
                    overview.append("<div class=\"coverFade\" style=\"width:$width%\">&nbsp;</div>")
                    overview.append("<div class=\"redFadeBar\">&nbsp;</div>")
                overview.append("</td>")
                overview.append("<td>")
                    overview.append("<div class=\"centerOverLay\">$testCaseUnknown</div>")
                    width = 100 - Math.round((testCaseUnknown / testCaseTotal) * 100)
                    overview.append("<div class=\"coverFade\" style=\"width:$width%\">&nbsp;</div>")
                    overview.append("<div class=\"orangeFadeBar\">&nbsp;</div>")
                overview.append("</td>")
                overview.append("<td class=\"defaultStatus\">$testCaseTotal</td>")
            overview.append("</tr>")
            overview.append("<tr>")
                overview.append("<th>Test Step</th>")
                overview.append("<td>")
                    overview.append("<div class=\"centerOverLay\">$testStepPass</div>")
                    width = 100 - Math.round((testStepPass / testStepTotal) * 100)
                    overview.append("<div class=\"coverFade\" style=\"width:$width%\">&nbsp;</div>")
                    overview.append("<div class=\"greenFadeBar\">&nbsp;</div>")
                overview.append("</td>")
                overview.append("<td>")
                    overview.append("<div class=\"centerOverLay\">$testStepFail</div>")
                    width = 100 - Math.round((testStepFail / testStepTotal) * 100)
                    overview.append("<div class=\"coverFade\" style=\"width:$width%\">&nbsp;</div>")
                    overview.append("<div class=\"redFadeBar\">&nbsp;</div>")
                overview.append("</td>")
                overview.append("<td>")
                    overview.append("<div class=\"centerOverLay\">$testStepUnknown</div>")
                    width = 100 - Math.round((testStepUnknown / testStepTotal) * 100)
                    overview.append("<div class=\"coverFade\" style=\"width:$width%\">&nbsp;</div>")
                    overview.append("<div class=\"orangeFadeBar\">&nbsp;</div>")
                overview.append("</td>")
                overview.append("<td class=\"defaultStatus\">$testStepTotal</td>")
            overview.append("</tr>")
            overview.append("<tr>")
                overview.append("<th>Test Assertion</th>")
                overview.append("<td>")
                    overview.append("<div class=\"centerOverLay\">$testAssertionPass</div>")
                    width = 100 - Math.round((testAssertionPass / testAssertionTotal) * 100)
                    overview.append("<div class=\"coverFade\" style=\"width:$width%\">&nbsp;</div>")
                    overview.append("<div class=\"greenFadeBar\">&nbsp;</div>")
                overview.append("</td>")
                overview.append("<td>")
                    overview.append("<div class=\"centerOverLay\">$testAssertionFail</div>")
                    width = 100 - Math.round((testAssertionFail / testAssertionTotal) * 100)
                    overview.append("<div class=\"coverFade\" style=\"width:$width%\">&nbsp;</div>")
                    overview.append("<div class=\"redFadeBar\">&nbsp;</div>")
                overview.append("</td>")
                overview.append("<td>")
                    overview.append("<div class=\"centerOverLay\">$testAssertionUnknown</div>")
                    width = 100 - Math.round((testAssertionUnknown / testAssertionTotal) * 100)
                    overview.append("<div class=\"coverFade\" style=\"width:$width%\">&nbsp;</div>")
                    overview.append("<div class=\"orangeFadeBar\">&nbsp;</div>")
                overview.append("</td>")
                overview.append("<td class=\"defaultStatus\">$testAssertionTotal</td>")
            overview.append("</tr>")
        overview.append("</tbody>")
    overview.append("</table>")

    return overview;

}//end of method
//////////////////////////////////////////////////////////////////////////////////


///////////////////////////////////////////////////
//    Build Page Methods                        //
/////////////////////////////////////////////////

public String buildHtmlPage() {
  StringBuilder htmlPage = new StringBuilder()
     //Start page + markup (css)
     htmlPage.append("<html>")
         htmlPage.append("<head>")
             htmlPage.append("<style>")
                htmlPage.append('body {counter-reset: h3;}')
                htmlPage.append('div.parentContainer {width: 70%;margin-left: auto;margin-right: auto; margin-top: 100px;flex:1;}')
                htmlPage.append('div.banner {position:fixed;top: 0;bottom: 0;left: 0;right: 0;background: linear-gradient(to right, DodgerBlue, white, DodgerBlue); height: 90px; width: 100%; z-index: 1;}')
                htmlPage.append('div.defaultContainer {width: 100%;overflow: auto;}')
                htmlPage.append('img.headerImage {position:absolute;display:table;top: 0;bottom: 0;left: 0;right: 0;height: 60px;width: auto;margin:auto;margin-left: auto;margin-right: auto;z-index:2;}')
                htmlPage.append('div.testCaseDescription {border-radius: 10px;background-color: #cccccc;padding: 8px;margin-bottom: 10px;font-weight:normal;white-space:pre-wrap;}')
                htmlPage.append('h1 {text-align: center;font-weight: bold;}')
                htmlPage.append('h3 {text-indent: 20px;counter-reset: h4;}')
                htmlPage.append('h4 {text-indent: 40px;counter-reset: h5;}')
                htmlPage.append('h5 {text-indent: 60px;}')
                htmlPage.append('h3:before {content:counter(h3,decimal)"  ";counter-increment: h3;}')
                htmlPage.append('h4:before {content:counter(h3,decimal)"."counter(h4,decimal)"  ";counter-increment: h4;}')
                htmlPage.append('h5:before {content:counter(h3,decimal)"."counter(h4,decimal)"."counter(h5,decimal)"  ";counter-increment: h5;}')
                htmlPage.append('table {font-family: arial, sans-serif;border-collapse: collapse;width: 100%;min-width:400px;margin-bottom:20px;border:1px solid;}')
                htmlPage.append('table.testDetail {}')
                htmlPage.append('table.testDetail col.type {width:150px;}')
                htmlPage.append('table.testDetail col.name {width:350px;}')
                htmlPage.append('table.testDetail col.status {width:120px;}')
                htmlPage.append('table.testDetail col.error {}')
                htmlPage.append('table.listOverview {width: auto;min-width: 33%;max-width: 66%;border:none;display:inline-block;}')
                htmlPage.append('table.numOverview {max-width:30%;vertical-align: top;border:none; float: right;}')
                htmlPage.append('caption {text-align: left;font-size: 14px;font-weight: bold;padding-bottom: 8px}')
                htmlPage.append('tr {height: 100%;}')
                htmlPage.append('td, th {padding: 8px;border: 1px solid black;font-size: 12px;position:relative;}')
                htmlPage.append('td.pass {background-color:green;color:white;font-weight: bold;text-align: center;}')
                htmlPage.append('td.fail {background-color: red;color: white;font-weight: bold;text-align: center;}')
                htmlPage.append('td.defaultStatus {text-align: center;}')
                htmlPage.append('td.hooverable{}')
                htmlPage.append('table.numOverview th {}')
                htmlPage.append('table.numOverview td {width:18%;padding-left:0px;padding-right:0px;}')
                htmlPage.append('div.linkBlock {width:100%;height:100%;padding:0px;display:inline-block;}')
                htmlPage.append('div.greenFadeBar {position:absolute;top: 0;bottom: 0;left: 0;right: 0;height:100%;background:linear-gradient(to right, white, green 85%);z-index: -2;width: 100%;}')
                htmlPage.append('div.redFadeBar {position:absolute;top: 0;bottom: 0;left: 0;right: 0;height:100%;background: linear-gradient(to right, white, red 25%);z-index: -2;width: 100%;}')
                htmlPage.append('div.orangeFadeBar {position:absolute;top: 0;bottom: 0;left: 0;right: 0;height:100%;background: linear-gradient(to right, white, orange 50%);z-index: -2;width: 100%;}')
                htmlPage.append('div.coverFade {position:absolute;right: 0;top:0;height:100%;background-color: white;z-index: -1;float:right;}')
                htmlPage.append('div.centerOverLay {position:absolute;display:table;top: 0;bottom: 0;left: 0;right: 0;margin:auto;z-index: 0;width:20px;font-weight:bold;font-size:14px;}')
                htmlPage.append('table.listOverview td.hooverable:hover {background-color: #cccccc;}')
                htmlPage.append('@media screen and (max-width: 1400px) {table.numOverview {width: 100%;float:none;}')
             htmlPage.append("</style>")
         htmlPage.append("</head>")
         htmlPage.append("<body>")
            htmlPage.append("<div class=\"banner\">")
                htmlPage.append("<img class=\"headerImage\" src=\"" + getHeaderImageUrl() + "\"/>")
            htmlPage.append("</div>")
            htmlPage.append("<div class=\"parentContainer\">")
                 //retrieve project name
                 projectName = project.getName()
                 projectPath = project.getPath()
                 projectDescription = project.getDescription().replace(/(?:\r\n|\r|\n)/, '<br>')

                 //Set main title (project name)
                 htmlPage.append("<h1>$projectName</h1>")
                 htmlPage.append("<div class=\"testCaseDescription\">")
                      htmlPage.append("<span style=\"vertical-align:middle;\">")
                          htmlPage.append("<b>Project file location:</b> $projectPath")
                      htmlPage.append("</span>")
                  htmlPage.append("</div>")

                  htmlPage.append("<div class=\"testCaseDescription\">")
                      htmlPage.append("<span style=\"vertical-align:middle;\">")
                          htmlPage.append("<b>Project Description:</b><br>")
                          htmlPage.append("$projectDescription")
                      htmlPage.append("</span>")
                  htmlPage.append("</div>")

                 //set subtitle 'Overview' + add overview table
                 htmlPage.append("<h2>Overview</h2>")
                 htmlPage.append(getCountTable())
                 htmlPage.append(getOverviewTableData())

                 //set subtitle 'Details' + add details table
                 htmlPage.append("<h2>Details</h2>")
                 htmlPage.append(getDetailTableData())

             //End page (close main div, body and html tags)
             htmlPage.append("</div>")
         htmlPage.append("</body>")
     htmlPage.append("</html>")
     
     return htmlPage
}



///////////////////////////////////////////////////
//    WRITE FILE TO DISK                        //
/////////////////////////////////////////////////
public void writeReportToDisk(String htmlPage) {
    //set up variables for writing the file
    Date now = new Date()
    def timestamp = now.toTimestamp().toString().replaceAll(':','')
    projectName = project.getName()
    String baseLoc = project.getPropertyValue("testDataPath");
    if (baseLoc == null || "".equals(baseLoc)) {
	baseLoc = "C:\\SoapUI_ExecutionResults\\"
	//UISupport.showInfoMessage('There was not project-level property "testDataPath" defined.\nThe report will be saved in C:/Tools/Reports.')
    }
    
    // Create a File object representing the target folder
    def folder = new File( baseLoc + "Execution results" )
 
    // If it doesn't exist
    if( !folder.exists() ) {
        // Create all folders
        folder.mkdirs()
    }
 
    def fileName = projectName + "_" + timestamp + ".html"
    // Then, write to the file inside the folder
    def targetFile = new File( folder, fileName )
    targetFile.withWriterAppend { w -> w << htmlPage}
    
    //Now open the report in the standard browser (only on windows - commandline command)
    Desktop.getDesktop().browse(targetFile.toURI());
}]]></con:afterRunScript><con:sensitiveInformation/></con:soapui-project>
